{"ast":null,"code":"import _regeneratorRuntime from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _asyncToGenerator from \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/src/Data.js\";\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport * as _ from 'lodash';\nimport * as d3 from 'd3';\nimport { json } from 'd3';\nvar embedding_string = 'embeddings_';\nvar label_string = 'labels_';\nvar color_array_string = 'color_array_';\nvar description_string = 'description_';\n\nfunction getJson() {\n  return fetch(\"\".concat(process.env.PUBLIC_URL, \"/set_up.json\")).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    return json;\n  });\n}\n\n;\n\nfunction loadParams() {\n  return _loadParams.apply(this, arguments);\n}\n\nfunction _loadParams() {\n  _loadParams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var jsondata, object_return;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getJson().then(function (temp) {\n              jsondata = temp;\n            });\n\n          case 2:\n            object_return = new Object();\n            object_return.sprite_side = jsondata.sprite_side;\n            object_return.sprite_side_x = jsondata.sprite_side_x;\n            object_return.sprite_side_y = jsondata.sprite_side_y;\n            object_return.sprite_size = object_return.sprite_side_x * object_return.sprite_side_y;\n            object_return.sprite_number = jsondata.sprite_number;\n            object_return.sprite_image_size = jsondata.sprite_image_size;\n            object_return.sprite_image_width = jsondata.sprite_image_width;\n            object_return.sprite_image_height = jsondata.sprite_image_height;\n            object_return.sprite_ratio = object_return.sprite_image_width / object_return.sprite_image_height;\n            object_return.sprite_actual_size = jsondata.sprite_actual_size;\n            object_return.algorithm_options = jsondata.embedding_names;\n            object_return.label_options = jsondata.label_names;\n            object_return.embedding_number = jsondata.embedding_number;\n            object_return.label_number = jsondata.label_number;\n            object_return.colored_images = jsondata.colored_images;\n            object_return.zoom_min = jsondata.zoom_min;\n            object_return.zoom_mid = jsondata.zoom_mid;\n            object_return.zoom_max = jsondata.zoom_max;\n            object_return.hoover_size = jsondata.hoover_size;\n            return _context.abrupt(\"return\", object_return);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadParams.apply(this, arguments);\n}\n\nvar Data = /*#__PURE__*/function (_Component) {\n  _inherits(Data, _Component);\n\n  function Data(props) {\n    var _this;\n\n    _classCallCheck(this, Data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Data).call(this, props));\n    _this.state = {\n      sprite_side: null,\n      sprite_side_x: null,\n      sprite_side_y: null,\n      sprite_size: null,\n      sprite_number: null,\n      sprite_image_size: null,\n      sprite_image_width: null,\n      sprite_image_height: null,\n      sprite_actual_size: null,\n      sprite_ratio: null,\n      algorithm_options: null,\n      label_options: null,\n      embedding_number: null,\n      label_number: null,\n      color_array: null,\n      color_array_stack: [],\n      description: null,\n      description_stack: [],\n      embeddings: null,\n      embedding_stack: [],\n      labels: null,\n      label_stack: [],\n      colored_images: null,\n      zoom_min: null,\n      zoom_mid: null,\n      zoom_max: null,\n      hoover_size: null\n    };\n    return _this;\n  }\n\n  _createClass(Data, [{\n    key: \"scaleEmbeddings\",\n    value: function scaleEmbeddings(embeddings) {\n      var xs = embeddings.map(function (e) {\n        return Math.abs(e[0]);\n      });\n      var ys = embeddings.map(function (e) {\n        return Math.abs(e[1]);\n      });\n\n      var max_x = _.max(xs);\n\n      var max_y = _.max(ys);\n\n      var max = Math.max(max_x, max_y);\n      var scale = d3.scaleLinear().domain([-max, max]).range([-20, 20]);\n      var scaled_embeddings = embeddings.map(function (e) {\n        return [scale(e[0]), scale(e[1])];\n      });\n      return scaled_embeddings;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Promise.resolve(loadParams()).then(function (object_return_val) {\n        _this2.setState({\n          sprite_side: object_return_val.sprite_side,\n          sprite_side_x: object_return_val.sprite_side_x,\n          sprite_side_y: object_return_val.sprite_side_y,\n          sprite_size: object_return_val.sprite_size,\n          sprite_number: object_return_val.sprite_number,\n          sprite_image_size: object_return_val.sprite_image_size,\n          sprite_image_width: object_return_val.sprite_image_width,\n          sprite_image_height: object_return_val.sprite_image_height,\n          sprite_actual_size: object_return_val.sprite_actual_size,\n          embedding_number: object_return_val.embedding_number,\n          label_number: object_return_val.label_number,\n          algorithm_options: new Array(object_return_val.embedding_number),\n          label_options: new Array(object_return_val.label_number),\n          label_stack: new Array(object_return_val.label_number),\n          color_array_stack: new Array(object_return_val.label_number),\n          description_stack: new Array(object_return_val.label_number),\n          embedding_stack: new Array(object_return_val.embedding_number),\n          sprite_ratio: object_return_val.sprite_ratio,\n          colored_images: object_return_val.colored_images,\n          zoom_min: object_return_val.zoom_min,\n          zoom_mid: object_return_val.zoom_mid,\n          zoom_max: object_return_val.zoom_max,\n          hoover_size: object_return_val.hoover_size\n        }); // EMBEDDINGS\n\n\n        if (_this2.state.embedding_number > 1) {\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(embedding_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (jsondata) {\n            var scaled_embeddings = _this2.scaleEmbeddings(jsondata.points);\n\n            var embedding_stack_local = _this2.state.embedding_stack.slice();\n\n            var algorithm_options_local = _this2.state.algorithm_options.slice();\n\n            embedding_stack_local[0] = scaled_embeddings;\n            algorithm_options_local[0] = '0__' + jsondata.name;\n\n            _this2.setState({\n              embeddings: scaled_embeddings,\n              embedding_stack: embedding_stack_local,\n              algorithm_options: algorithm_options_local\n            });\n          });\n\n          var _loop = function _loop(i) {\n            fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(embedding_string).concat(i, \".json\")).then(function (response) {\n              return response.json();\n            }).then(function (jsondata) {\n              var scaled_embeddings = _this2.scaleEmbeddings(jsondata.points);\n\n              var embedding_stack_local = _this2.state.embedding_stack.slice();\n\n              var algorithm_options_local = _this2.state.algorithm_options.slice();\n\n              embedding_stack_local[i] = scaled_embeddings;\n              algorithm_options_local[i] = String(i) + '__' + jsondata.name;\n\n              _this2.setState({\n                embeddings: scaled_embeddings,\n                embedding_stack: embedding_stack_local,\n                algorithm_options: algorithm_options_local\n              });\n            });\n          };\n\n          for (var i = 1; i < _this2.state.embedding_number; i++) {\n            _loop(i);\n          }\n        } else {\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(embedding_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (jsondata) {\n            var scaled_embeddings = _this2.scaleEmbeddings(jsondata.points);\n\n            var embedding_stack_local = _this2.state.embedding_stack.slice();\n\n            var algorithm_options_local = _this2.state.algorithm_options.slice();\n\n            embedding_stack_local[0] = scaled_embeddings;\n            algorithm_options_local[0] = '0__' + jsondata.name;\n\n            _this2.setState({\n              embeddings: scaled_embeddings,\n              embedding_stack: embedding_stack_local,\n              algorithm_options: algorithm_options_local\n            });\n          });\n        } // LABELS AND COLORMAP AND DESCRIPTION\n\n\n        if (_this2.state.label_number > 1) {\n          // LABEL\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(label_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (labels) {\n            var label_stack_local = _this2.state.label_stack.slice();\n\n            label_stack_local[0] = labels;\n\n            _this2.setState({\n              labels: labels,\n              label_stack: label_stack_local\n            });\n          });\n\n          var _loop2 = function _loop2(_i) {\n            fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(label_string).concat(_i, \".json\")).then(function (response) {\n              return response.json();\n            }).then(function (labels) {\n              var label_stack_local = _this2.state.label_stack.slice();\n\n              label_stack_local[_i] = labels;\n\n              _this2.setState({\n                label_stack: label_stack_local\n              });\n            });\n          };\n\n          for (var _i = 1; _i < _this2.state.label_number; _i++) {\n            _loop2(_i);\n          } // COLOR\n\n\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(color_array_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (color) {\n            var color_array_stack_local = _this2.state.color_array_stack.slice();\n\n            color_array_stack_local[0] = color;\n\n            _this2.setState({\n              color_array: color,\n              color_array_stack: color_array_stack_local\n            });\n          });\n\n          var _loop3 = function _loop3(_i2) {\n            fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(color_array_string).concat(_i2, \".json\")).then(function (response) {\n              return response.json();\n            }).then(function (color) {\n              var color_array_stack_local = _this2.state.color_array_stack.slice();\n\n              color_array_stack_local[_i2] = color;\n\n              _this2.setState({\n                color_array_stack: color_array_stack_local\n              });\n            });\n          };\n\n          for (var _i2 = 1; _i2 < _this2.state.label_number; _i2++) {\n            _loop3(_i2);\n          } // DESCRIPTION\n\n\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(description_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (description) {\n            var description_stack_local = _this2.state.description_stack.slice();\n\n            description_stack_local[0] = description;\n\n            var label_options_local = _this2.state.label_options.slice();\n\n            label_options_local[0] = description.name;\n\n            _this2.setState({\n              description: description,\n              description_stack: description_stack_local,\n              label_options: label_options_local\n            });\n          });\n\n          var _loop4 = function _loop4(_i3) {\n            fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(description_string).concat(_i3, \".json\")).then(function (response) {\n              return response.json();\n            }).then(function (description) {\n              var description_stack_local = _this2.state.description_stack.slice();\n\n              description_stack_local[_i3] = description;\n\n              var label_options_local = _this2.state.label_options.slice();\n\n              label_options_local[_i3] = description.name;\n\n              _this2.setState({\n                description_stack: description_stack_local,\n                label_options: label_options_local\n              });\n            });\n          };\n\n          for (var _i3 = 1; _i3 < _this2.state.label_number; _i3++) {\n            _loop4(_i3);\n          }\n        } else {\n          // LABEL\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(label_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (labels) {\n            var label_stack_local = _this2.state.label_stack.slice();\n\n            label_stack_local[0] = labels;\n\n            _this2.setState({\n              labels: labels,\n              label_stack: label_stack_local\n            });\n          }); // COLOR\n\n          fetch(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(color_array_string, \"0.json\")).then(function (response) {\n            return response.json();\n          }).then(function (color) {\n            var color_array_stack_local = _this2.state.color_array_stack.slice();\n\n            color_array_stack_local[0] = color;\n\n            _this2.setState({\n              color_array: color,\n              color_array_stack: color_array_stack_local\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return this.state.embeddings && this.state.labels ? /*#__PURE__*/React.createElement(Layout, Object.assign({}, this.state, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }\n      }, \"Loading data...\");\n    }\n  }]);\n\n  return Data;\n}(Component);\n\nexport default Data;","map":{"version":3,"sources":["/home/blacksmurf/Desktop/Marion/Explorer_Export/Explorer_Export/src/Data.js"],"names":["React","Component","Layout","_","d3","json","embedding_string","label_string","color_array_string","description_string","getJson","fetch","process","env","PUBLIC_URL","then","res","loadParams","temp","jsondata","object_return","Object","sprite_side","sprite_side_x","sprite_side_y","sprite_size","sprite_number","sprite_image_size","sprite_image_width","sprite_image_height","sprite_ratio","sprite_actual_size","algorithm_options","embedding_names","label_options","label_names","embedding_number","label_number","colored_images","zoom_min","zoom_mid","zoom_max","hoover_size","Data","props","state","color_array","color_array_stack","description","description_stack","embeddings","embedding_stack","labels","label_stack","xs","map","e","Math","abs","ys","max_x","max","max_y","scale","scaleLinear","domain","range","scaled_embeddings","Promise","resolve","object_return_val","setState","Array","response","scaleEmbeddings","points","embedding_stack_local","slice","algorithm_options_local","name","i","String","label_stack_local","color","color_array_stack_local","description_stack_local","label_options_local","console","log","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from './Layout'\r\nimport * as _ from 'lodash'\r\nimport * as d3 from 'd3'\r\nimport { json } from 'd3'\r\n\r\nlet embedding_string = 'embeddings_'\r\nlet label_string = 'labels_'\r\nlet color_array_string = 'color_array_'\r\nlet description_string = 'description_'\r\n\r\nfunction getJson(){\r\n  return fetch(`${process.env.PUBLIC_URL}/set_up.json`)\r\n  .then((res) => res.json())\r\n  .then((json) => json)\r\n};\r\n\r\nasync function loadParams(){\r\n  let jsondata\r\n  await getJson().then((temp) =>{\r\n    jsondata = temp\r\n  })\r\n  let object_return = new Object()\r\n  object_return.sprite_side       = jsondata.sprite_side\r\n  object_return.sprite_side_x     = jsondata.sprite_side_x\r\n  object_return.sprite_side_y     = jsondata.sprite_side_y\r\n  object_return.sprite_size       = object_return.sprite_side_x * object_return.sprite_side_y\r\n  object_return.sprite_number     = jsondata.sprite_number\r\n  object_return.sprite_image_size = jsondata.sprite_image_size\r\n  object_return.sprite_image_width= jsondata.sprite_image_width\r\n  object_return.sprite_image_height= jsondata.sprite_image_height\r\n  object_return.sprite_ratio      = object_return.sprite_image_width / object_return.sprite_image_height\r\n  object_return.sprite_actual_size= jsondata.sprite_actual_size\r\n  object_return.algorithm_options = jsondata.embedding_names\r\n  object_return.label_options     = jsondata.label_names\r\n  object_return.embedding_number  = jsondata.embedding_number\r\n  object_return.label_number      = jsondata.label_number\r\n  object_return.colored_images    = jsondata.colored_images\r\n  object_return.zoom_min          = jsondata.zoom_min\r\n  object_return.zoom_mid          = jsondata.zoom_mid\r\n  object_return.zoom_max          = jsondata.zoom_max\r\n  object_return.hoover_size       = jsondata.hoover_size\r\n  return object_return\r\n}\r\n\r\nclass Data extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      sprite_side:null,\r\n      sprite_side_x:null,\r\n      sprite_side_y:null,\r\n      sprite_size: null,\r\n      sprite_number:null,\r\n      sprite_image_size:null,\r\n      sprite_image_width:null,\r\n      sprite_image_height:null,\r\n      sprite_actual_size:null,\r\n      sprite_ratio:null,\r\n      algorithm_options: null,\r\n      label_options:null,\r\n      embedding_number: null,\r\n      label_number:null,\r\n      color_array:null,\r\n      color_array_stack: [],\r\n      description:null,\r\n      description_stack: [],\r\n      embeddings: null,\r\n      embedding_stack: [],\r\n      labels: null,\r\n      label_stack: [],\r\n      colored_images: null,\r\n      zoom_min: null,\r\n      zoom_mid: null,\r\n      zoom_max: null,\r\n      hoover_size: null,\r\n    }\r\n  }\r\n\r\n  scaleEmbeddings(embeddings) {\r\n    let xs = embeddings.map(e => Math.abs(e[0]))\r\n    let ys = embeddings.map(e => Math.abs(e[1]))\r\n    let max_x = _.max(xs)\r\n    let max_y = _.max(ys)\r\n    let max = Math.max(max_x, max_y)\r\n    let scale = d3\r\n      .scaleLinear()\r\n      .domain([-max, max])\r\n      .range([-20, 20])\r\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1])])\r\n    return scaled_embeddings\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.resolve(loadParams()).then((object_return_val)=>{\r\n      this.setState({\r\n        sprite_side: object_return_val.sprite_side,\r\n        sprite_side_x: object_return_val.sprite_side_x,\r\n        sprite_side_y: object_return_val.sprite_side_y,\r\n        sprite_size: object_return_val.sprite_size,\r\n        sprite_number: object_return_val.sprite_number,\r\n        sprite_image_size: object_return_val.sprite_image_size,\r\n        sprite_image_width: object_return_val.sprite_image_width,\r\n        sprite_image_height: object_return_val.sprite_image_height,\r\n        sprite_actual_size: object_return_val.sprite_actual_size,\r\n        embedding_number: object_return_val.embedding_number,\r\n        label_number: object_return_val.label_number,\r\n        algorithm_options: new Array(object_return_val.embedding_number),\r\n        label_options: new Array(object_return_val.label_number),\r\n        label_stack: new Array(object_return_val.label_number),\r\n        color_array_stack: new Array(object_return_val.label_number),\r\n        description_stack: new Array(object_return_val.label_number),\r\n        embedding_stack: new Array(object_return_val.embedding_number),\r\n        sprite_ratio: object_return_val.sprite_ratio ,\r\n        colored_images: object_return_val.colored_images,\r\n        zoom_min: object_return_val.zoom_min,\r\n        zoom_mid: object_return_val.zoom_mid,\r\n        zoom_max: object_return_val.zoom_max,\r\n        hoover_size: object_return_val.hoover_size,\r\n      })\r\n      // EMBEDDINGS\r\n      if (this.state.embedding_number > 1){\r\n        fetch(`${process.env.PUBLIC_URL}/${embedding_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(jsondata => {\r\n          let scaled_embeddings = this.scaleEmbeddings(jsondata.points)\r\n          let embedding_stack_local =  this.state.embedding_stack.slice()\r\n          let algorithm_options_local =  this.state.algorithm_options.slice()\r\n          embedding_stack_local[0] = scaled_embeddings\r\n          algorithm_options_local[0] = '0__'+jsondata.name\r\n          this.setState({\r\n            embeddings: scaled_embeddings,\r\n            embedding_stack: embedding_stack_local,\r\n            algorithm_options: algorithm_options_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.embedding_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${embedding_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(jsondata => {\r\n            let scaled_embeddings = this.scaleEmbeddings(jsondata.points)\r\n            let embedding_stack_local =  this.state.embedding_stack.slice()\r\n            let algorithm_options_local =  this.state.algorithm_options.slice()\r\n            embedding_stack_local[i] = scaled_embeddings\r\n            algorithm_options_local[i] = String(i)+'__'+jsondata.name\r\n            this.setState({\r\n              embeddings: scaled_embeddings,\r\n              embedding_stack: embedding_stack_local,\r\n              algorithm_options: algorithm_options_local\r\n            })\r\n          })\r\n        }\r\n      }\r\n      else{\r\n        fetch(`${process.env.PUBLIC_URL}/${embedding_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(jsondata => {\r\n          let scaled_embeddings = this.scaleEmbeddings(jsondata.points)\r\n          let embedding_stack_local =  this.state.embedding_stack.slice()\r\n          let algorithm_options_local =  this.state.algorithm_options.slice()\r\n          embedding_stack_local[0] = scaled_embeddings\r\n          algorithm_options_local[0] = '0__'+jsondata.name\r\n          this.setState({\r\n            embeddings: scaled_embeddings,\r\n            embedding_stack: embedding_stack_local,\r\n            algorithm_options: algorithm_options_local\r\n          })\r\n        })\r\n\r\n      }\r\n      // LABELS AND COLORMAP AND DESCRIPTION\r\n      if (this.state.label_number > 1){\r\n        // LABEL\r\n        fetch(`${process.env.PUBLIC_URL}/${label_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(labels => {\r\n          let label_stack_local =  this.state.label_stack.slice()\r\n          label_stack_local[0] = labels\r\n          this.setState({\r\n            labels: labels,\r\n            label_stack: label_stack_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.label_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${label_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(labels => {\r\n            let label_stack_local =  this.state.label_stack.slice()\r\n            label_stack_local[i] = labels\r\n            this.setState({\r\n              label_stack: label_stack_local\r\n            })\r\n          })\r\n        }\r\n        // COLOR\r\n        fetch(`${process.env.PUBLIC_URL}/${color_array_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(color => {\r\n          let color_array_stack_local =  this.state.color_array_stack.slice()\r\n          color_array_stack_local[0] = color\r\n          this.setState({\r\n            color_array: color,\r\n            color_array_stack: color_array_stack_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.label_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${color_array_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(color => {\r\n            let color_array_stack_local =  this.state.color_array_stack.slice()\r\n            color_array_stack_local[i] = color\r\n            this.setState({\r\n              color_array_stack: color_array_stack_local\r\n            })\r\n          })\r\n        }\r\n        // DESCRIPTION\r\n        fetch(`${process.env.PUBLIC_URL}/${description_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(description => {\r\n          let description_stack_local =  this.state.description_stack.slice()\r\n          description_stack_local[0] = description\r\n          let label_options_local =  this.state.label_options.slice()\r\n          label_options_local[0] = description.name\r\n          this.setState({\r\n            description: description,\r\n            description_stack: description_stack_local,\r\n            label_options: label_options_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.label_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${description_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(description => {\r\n            let description_stack_local =  this.state.description_stack.slice()\r\n            description_stack_local[i] = description\r\n            let label_options_local =  this.state.label_options.slice()\r\n            label_options_local[i] = description.name\r\n            this.setState({\r\n              description_stack: description_stack_local,\r\n              label_options: label_options_local\r\n            })\r\n          })\r\n        }\r\n      }\r\n      else{\r\n        // LABEL\r\n        fetch(`${process.env.PUBLIC_URL}/${label_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(labels => {\r\n          let label_stack_local =  this.state.label_stack.slice()\r\n          label_stack_local[0] = labels\r\n          this.setState({\r\n            labels: labels,\r\n            label_stack: label_stack_local\r\n          })\r\n        })\r\n        // COLOR\r\n        fetch(`${process.env.PUBLIC_URL}/${color_array_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(color => {\r\n          let color_array_stack_local =  this.state.color_array_stack.slice()\r\n          color_array_stack_local[0] = color\r\n          this.setState({\r\n            color_array: color,\r\n            color_array_stack: color_array_stack_local\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    return this.state.embeddings && this.state.labels ? (\r\n      <Layout\r\n        {...this.state}\r\n      />\r\n    ) : (\r\n      <div style={{ padding: '1rem' }}>Loading data...</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Data\r\n"]},"metadata":{},"sourceType":"module"}